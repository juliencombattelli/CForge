name: Build & Tests

on: [push, pull_request]

jobs:

  build:

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:

      - name: Checkout project
        uses: actions/checkout@v3

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install CMake
        run: |
          pip3 install --upgrade pip
          pip3 install cmake

      - name: Install LCOV
        uses: hrishikesh-kadam/setup-lcov@v1

      - name: Install Sphinx and extensions
        working-directory: doc
        run: |
          pip3 install setuptools
          pip3 install -r ./requirements.txt

      - name: Configure
        run: |
          cmake -S . -B ../cforge-build -DCFORGE_ENABLE_TESTING=ON -DCFORGE_ENABLE_COVERAGE=ON -DCFORGE_ENABLE_DOCUMENTATION=ON

      - name: Build
        run: |
          cmake --build ../cforge-build

      - name: Remove Git-Bash Unix tools from PATH on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          Rename-Item "C:\\Program Files\\Git\\usr" "C:\\Program Files\\Git\\usr.bak"

      - name: Run tests
        working-directory: ../cforge-build
        run: |
          ctest --output-on-failure --verbose -C Release

      - name: Restore Git-Bash Unix tools on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          Rename-Item "C:\\Program Files\\Git\\usr.bak" "C:\\Program Files\\Git\\usr"

      - name: Generate docs
        run: |
          cmake --build ../cforge-build --target doc

      # - name: Upload
      #   uses: actions/upload-artifact@v1
      #   with:
      #     path: .
      #     name: build-tree.${{ matrix.os }}
